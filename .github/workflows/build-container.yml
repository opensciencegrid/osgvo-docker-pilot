name: Build and test container images

on:
  push:
  pull_request:
  repository_dispatch:
    types:
      - dispatch-build
  workflow_dispatch:

jobs:
  make-date-tag:
    runs-on: ubuntu-latest
    outputs:
      dtag: ${{ steps.mkdatetag.outputs.dtag }}
    steps:
    - name: make date tag
      id: mkdatetag
      run: echo "::set-output name=dtag::$(date +%Y%m%d-%H%M)"

  build:
    runs-on: ubuntu-latest
    needs: [make-date-tag]
    strategy:
      fail-fast: false
      matrix:
        osg_series: ['3.6']
        repo: ['testing']
    steps:
      - uses: opensciencegrid/build-container-action@v0.4.1
        with:
          osg_series: ${{ matrix.osg_series }}
          repo: ${{ matrix.repo }}
          timestamp_tag: ${{ needs.make-date-tag.outputs.dtag }}

  test:
    runs-on: ubuntu-20.04
    needs: [make-date-tag, build]
    strategy:
      fail-fast: false
      matrix:
        osg_series: ['3.6']
        repo: ['testing']
        runtime: ['docker', 'singularity']
        cvmfs: ['bindmount', 'cvmfsexec']
        exclude:
          - runtime: singularity
            cvmfs: cvmfsexec
    steps:
      - uses: opensciencegrid/load-container-action@v0.5.0
        id: load-image
        with:
          osg_series: ${{ matrix.osg_series }}
          repo: ${{ matrix.repo }}
          timestamp_tag: ${{ needs.make-date-tag.outputs.dtag }}
      - name: Run tests
        env:
          CONTAINER_RUNTIME: ${{ matrix.runtime }}
          CVMFS_INSTALL: ${{ matrix.cvmfs }}
          CONTAINER_IMAGE: ${{ steps.load-image.outputs.image_tag }}
        run: |
          sudo ./tests/test_inside_gha.sh "$CONTAINER_RUNTIME" \
                                          "$CVMFS_INSTALL" \
                                          "$CONTAINER_IMAGE"
