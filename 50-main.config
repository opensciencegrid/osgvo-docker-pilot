DAEMON_LIST = MASTER, STARTD

# CONDOR_HOST may be overridden by the pilot config file
CONDOR_HOST = cm-1.ospool.osg-htc.org,cm-2.ospool.osg-htc.org
USE_CCB = True
CCB_HEARTBEAT_INTERVAL = 120

FILESYSTEM_DOMAIN = $(HOSTNAME)
UID_DOMAIN = $(HOSTNAME)

LOCAL_DIR=/pilot/condor_local
SPOOL = $(LOCAL_DIR)/spool
LOG = /pilot/log

# now dynamically set in 10-setup-htcondor.sh
#USER_JOB_WRAPPER = /usr/sbin/osgvo-singularity-wrapper

# scitokens
# NOTE: credd will refuse to transfer tokens on a non-encrypted link.
SEC_DEFAULT_ENCRYPTION = REQUIRED
SEC_CREDENTIAL_DIRECTORY = $(LOCAL_DIR)/creds
CREDD_OAUTH_MODE = True
TOKENS = True

SEC_DEFAULT_AUTHENTICATION_METHODS = IDTOKENS,PASSWORD,FS
SEC_CLIENT_AUTHENTICATION_METHODS = IDTOKENS,FS

ALLOW_ADMINISTRATOR = condor_pool@*/*

use feature : GPUs
# dynamic slots
SLOT_TYPE_1 = cpus=100%,gpus=100%,disk=100%,swap=100%
SLOT_TYPE_1_PARTITIONABLE = TRUE
NUM_SLOTS = 1
NUM_SLOTS_TYPE_1 = 1

# make it look like a gwms glidein
GLIDEIN_Country = "US"
GLIDEIN_Site = "Docker"
GLIDEIN_ResourceName = "Docker"

GLIDEIN_ContainerTag = "@CONTAINER_TAG@"

STARTD_ATTRS = $(STARTD_ATTRS) GLIDEIN_Country GLIDEIN_Site GLIDEIN_ResourceName \
               WorkerGroupName IsOsgVoContainer GLIDEIN_ContainerTag \
               IsBlackHole HasExcessiveLoad

IsBlackHole = IfThenElse(RecentJobDurationAvg is undefined, false, RecentJobDurationCount >= 10 && RecentJobDurationAvg < 180)
HasExcessiveLoad = LoadAvg > 2*DetectedCpus + 2

# only accept new work for a while, for validated nodes and jobs with project name set
# On GPU nodes, CPU only jobs are only allowed after all GPUs are in use
#
# Some attributes used (OSG_NODE_VALIDATED, IsBlackHole, HasExcessiveLoad, ...) might
# not be used/defined by all VOs, so we explicitly check if they are defined before
# using them as part of the START expression.
START = (isUndefined(DaemonStartTime) || (time() - DaemonStartTime) < (MY.ACCEPT_JOBS_FOR_HOURS*60*60)) && \
        (isUndefined(MY.OSG_NODE_VALIDATED) || MY.OSG_NODE_VALIDATED) && \
        (isUndefined(IsBlackHole) || IsBlackHole == False) && \
        (isUndefined(HasExcessiveLoad) || HasExcessiveLoad == False) && \
        ((DESIRED_Sites=?=undefined) || stringListMember(GLIDEIN_Site,DESIRED_Sites,",")) && \
        ((UNDESIRED_Sites=?=undefined) || !stringListMember(GLIDEIN_Site,UNDESIRED_Sites,",")) && \
        (!isUndefined(TARGET.ProjectName)) && \
        ($(CPUJOB_ON_GPUSLOT)) && \
        (isUndefined(TARGET.SingularityImage) || MY.SINGULARITY_START_CLAUSE) && \
        (TARGET.Want_MPI =!= True || MY.Has_MPI =?= True) && \
        ($(START_EXTRA))

# Include the osgvo-docker-pilot configuration file, if it exists.
include ifexist: $ENV(PILOT_CONFIG_FILE)

#######################################################################
#
# shutdown if we are out of jobs
#

# when the work is complete, shut down the startd
STARTD_NOCLAIM_SHUTDOWN = $(ACCEPT_IDLE_MINUTES) * 60

# Have the master exit if the startd isn't around and it's been given more
# than sixty seconds to show up.  (We could avoid having a timeout if we
# were sure that START_StartTime was undefined before its first start.)
MASTER.DAEMON_SHUTDOWN_FAST = ( STARTD_StartTime == 0 ) && ((CurrentTime - DaemonStartTime) > 60)

# callout to a script when the master exits
DEFAULT_MASTER_SHUTDOWN_SCRIPT = /etc/condor/master_shutdown.sh

# Identify pilot container jobs for gratia-probe detection
IsOsgVoContainer = True

# All daemons should log to syslog instead of to their corresponding files.  In this
# container, syslog is configured to echo all logs to stdout (which the container runtime
# should pick up).
MAX_DEFAULT_LOG = 0
ALL_DEBUG=D_CAT,D_SUB_SECOND,D_PID
